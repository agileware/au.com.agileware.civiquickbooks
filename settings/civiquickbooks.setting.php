<?php

use CRM_Civiquickbooks_ExtensionUtil as E;

return [
  'quickbooks_consumer_key' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_consumer_key',
    'type' => 'String',
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Client ID'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Initial client id retrieved from quickbooks website'),
    'help_text' => E::ts('Initial client id retrieved from quickbooks website'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_shared_secret' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_shared_secret',
    'type' => 'String',
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Client Secret'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Initial client secret retrieved from quickbooks website'),
    'help_text' => E::ts('Initial client secret retrieved from quickbooks website'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_baseurl' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_baseurl',
    'type' => 'String',
    'add' => '4.7',
    'default' => 'Production',
    'title' => E::ts('Environment'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Development or Production mode.'),
    'help_text' => E::ts('Use Development to test with your sandbox.'),
    'html_type' => 'select',
    'options' => array(
      'Production' => E::ts('Production'),
      'Development' => E::ts('Development'),
    ),
    'html_attributes' => [
      'class' => 'crm-select2',
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_access_token' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_access_token',
    'type' => 'string',
    'html_type' => NULL,
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Current Access Token'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Access token retrieved after user authorization'),
    'help_text' => E::ts('Access token retrieved after user authorization'),
  ],
  'quickbooks_refresh_token' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_refresh_token',
    'type' => 'string',
    'html_type' => NULL,
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Current Refresh Token'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Refresh token retrieved after user authorization'),
    'help_text' => E::ts('Refresh token retrieved after user authorization'),
  ],
  'quickbooks_state_token' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_state_token',
    'type' => 'string',
    'html_type' => NULL,
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Current State Token'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('State token generated for user authorization'),
    'help_text' => E::ts('State token generated for user authorization'),
  ],
  'quickbooks_access_token_expiryDate' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_access_token_expiryDate',
    'type' => 'String',
    'add' => '4.7',
    'default' => 1,
    'title' => E::ts('Access Token Expiry Date'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Expiry date of the current access token'),
    'help_text' => E::ts('Expiry date of the current access token'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
      'readonly' => 'true',
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_refresh_token_expiryDate' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_refresh_token_expiryDate',
    'type' => 'String',
    'add' => '4.7',
    'default' => 1,
    'title' => E::ts('Refresh Token Expiry Date'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Expiry date of the current refresh token'),
    'help_text' => E::ts('Expiry date of the current refresh token'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
      'readonly' => 'true',
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_email_invoice' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_email_invoice',
    'type' => 'String',
    'add' => '4.7',
    'default' => 'unpaid',
    'title' => E::ts('Send Email for new Invoices'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Whether an email should be sent to the Invoicee when a new Invoice is created in Quickbooks.'),
    'help_text' => E::ts('Whether an email should be sent to the Invoicee when a new Invoice is created in Quickbooks.'),
    'html_type' => 'select',
    'options' => [
      'never' => E::ts('Never'),
      'unpaid' => E::ts('Unpaid Invoices Only'),
      'always' => E::ts('Always'),
    ],
    'html_attributes' => [
      'class' => 'crm-select2',
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_activate_qbo_logging' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_activate_qbo_logging',
    'type' => 'Boolean',
    'add' => '2.7',
    'default' => 0,
    'title' => E::ts('Activate QBO logging?'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('If selected, QBO will log potentially sensitive data to the QBO Log Directory.'),
    'help_text' => E::ts('If selected, QBO will log potentially sensitive data to the QBO Log Directory.'),
    'html_type' => 'checkbox',
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_realmId' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_realmId',
    'type' => 'String',
    'add' => '4.7',
    'default' => '',
    'title' => 'realmId',
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('realmId retrieved when got access token'),
    'help_text' => E::ts('realmId retrieved when got access token'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
      'readonly' => 'true',
    ],
  ],
  'quickbooks_company_country' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_company_country',
    'type' => 'String',
    'add' => '4.7',
    'default' => 'AU',
    'title' => E::ts('QuickBooks Company Country'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('QuickBooks company country code for differentiating US and other countries during including tax in invoices.'),
    'help_text' => E::ts('QuickBooks company country code for differentiating US and other countries during including tax in invoices.'),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 50,
      'readonly' => 'true',
    ],
  ],
  'quickbooks_autogenerate_invoice_number' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_autogenerate_invoice_number',
    'type' => 'String',
    'add' => '4.7',
    'default' => 'civi',
    'title' => E::ts('Where should Invoice Numbers be generated?'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Whether the invoice numbers should be generated in CiviCRM or QuickBooks.'),
    'help_text' => E::ts('Whether the invoice numbers should be generated in CiviCRM or QuickBooks.'),
    'html_type' => 'select',
    'options' => [
      'civi' => E::ts('CiviCRM'),
      'qb' => E::ts('QuickBooks'),
    ],
    'html_attributes' => [
      'class' => 'crm-select2',
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_invoice_prefix' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_invoice_prefix',
    'type' => 'String',
    'default' => 'Civi-%07d',
    'title' => E::ts('Invoice Prefix'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts(
      'Will be prefixed to Transaction ID when CiviCRM generates an Invoice number for QBO. You can optionally include a format specifier <a href="%1">for printf</a> e.g. %2 will enforce 7 digits with 0 as padding (123 => Civi-0000123)',
      [ 1 => 'https://www.php.net/manual/en/function.printf.php',
        2 => 'Civi-%07d'
      ]),
    'help_text' => E::ts(
      'Will be prefixed to Transaction ID when CiviCRM generates an Invoice number for QBO. You can optionally include a format specifier <a href="%1">for printf</a> e.g. %2 will enforce 7 digits with 0 as padding (123 => Civi-0000123)',
      [ 1 => 'https://www.php.net/manual/en/function.printf.php',
        2 => 'Civi-%07d'
      ]),
    'html_type' => 'text',
    'html_attributes' => [
      'size' => 10,
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_allow_ach' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_allow_ach',
    'type' => 'Boolean',
    'add' => '4.7',
    'default' => '0',
    'title' => E::ts('Allow ACH Payment?'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Specifies if invoices can be paid with online bank transfers'),
    'help_text' => E::ts('Specifies if invoices can be paid with online bank transfers'),
    'html_type' => 'checkbox',
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_allow_creditcard' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_allow_creditcard',
    'type' => 'Boolean',
    'add' => '4.7',
    'default' => '0',
    'title' => E::ts('Allow Online Credit Card Payment?'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Specifies if online credit card payments are allowed for invoices'),
    'help_text' => E::ts('Specifies if online credit card payments are allowed for invoices'),
    'html_type' => 'checkbox',
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
  'quickbooks_customer_memo' => [
    'group_name' => E::ts('QuickBooks Online Settings'),
    'group' => 'civiquickbooks',
    'name' => 'quickbooks_customer_memo',
    'type' => 'String',
    'add' => '4.7',
    'default' => '',
    'title' => E::ts('Customer Memo Override'),
    'is_domain' => 1,
    'is_contact' => 0,
    'description' => E::ts('Custom Memo text (instead of the contribution source)'),
    'help_text' => E::ts('if you enter text into this field it will be displayed on the invoice as the Memo instead of the source'),
    'html_type' => 'textarea',
    'html_attributes' => [
      'size' => 200,
    ],
    'settings_pages' => ['quickbooks' => ['weight' => 1]],
  ],
];
